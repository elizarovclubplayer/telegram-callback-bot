require("dotenv").config();
const { Telegraf, Markup } = require("telegraf");
const fs = require("fs");
const bot = new Telegraf(process.env.BOT_TOKEN);
const userStates = {};

bot.start((ctx) => { // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
    ctx.reply(
        `üëã –ü—Ä–∏–≤–µ—Ç, ${ctx.from.first_name}!\n\n` +
        `–Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–∂–µ—Ç –±—ã—Å—Ç—Ä–æ –æ—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –æ–±—Ä–∞—Ç–Ω—ã–π –∑–≤–æ–Ω–æ–∫.\n` +
        `–ü—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ 3 –∫–æ—Ä–æ—Ç–∫–∏—Ö –≤–æ–ø—Ä–æ—Å–∞ ‚Äî –∏ –º—ã —Å —Ç–æ–±–æ–π —Å–≤—è–∂–µ–º—Å—è –≤ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è! ‚òéÔ∏è`,
        Markup.keyboard([
            ["‚òé –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É"]
        ]).resize()
    );
});

bot.hears("‚òé –û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É", (ctx) => {
    const chatId = ctx.chat.id;
    userStates[chatId] = {step: "name"};
    ctx.reply("–£–∫–∞–∂–∏—Ç–µ –í–∞—à–µ –∏–º—è");
});

bot.on("text", (ctx, next) => {
    const chatId = ctx.chat.id;
    const state = userStates[chatId];
    if (!state) return next();

    const text = ctx.message.text;

    if (state.step === "name") {
        state.name = text;
        state.step = "phone";
        ctx.reply("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞");
    } else if (state.step === "phone") {
        const phone = text.trim();

        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        const cleaned = phone.replace(/[^+\d]/g, ""); // –£–¥–∞–ª—è–µ–º –≤—Å—ë –∫—Ä–æ–º–µ —Ü–∏—Ñ—Ä –∏ "+"
        if (cleaned.length < 10 || !/^\+?\d{10,15}$/.test(cleaned)) {
            return ctx.reply("‚ùó –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä: +7 900 123 45 67)");
        }

        state.phone = phone;
        state.step = "time";
        ctx.reply("–£–∫–∞–∂–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è –¥–ª—è –∑–≤–æ–Ω–∫–∞");
    } else if (state.step === "time") {
        state.time = text;

        const call = {
            name: state.name,
            phone: state.phone,
            time: state.time,
            date: new Date().toLocaleString("ru-RU")
        };

        let calls = [];

        try {
            const data = fs.readFileSync("calls.json", "utf8");
            calls = data ? JSON.parse(data) : [];
        } catch (e) {
            console.error("–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è calls.json:", e.message);
            calls = []; // –µ—Å–ª–∏ –æ—à–∏–±–∫–∞ ‚Äî –Ω–∞—á–∏–Ω–∞–µ–º —Å –ø—É—Å—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞
        }
        calls.push(call);
        fs.writeFileSync("calls.json", JSON.stringify(calls, null, 2));

        ctx.reply(
            `‚úÖ –°–ø–∞—Å–∏–±–æ, ${state.name}!\n` +
            `–ú—ã –ø–µ—Ä–µ–∑–≤–æ–Ω–∏–º –≤–∞–º –≤ **${state.time}**.\n\n` +
            `–ï—Å–ª–∏ –≤—ã —É–∫–∞–∑–∞–ª–∏ –Ω–µ–≤–µ—Ä–Ω–æ–µ –≤—Ä–µ–º—è ‚Äî –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û—Å—Ç–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É" –∏ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∑–∞–Ω–æ–≤–æ.`
        );
        delete userStates[chatId];
    }
});

bot.launch();